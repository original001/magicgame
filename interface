class Painter {
  constructor(canvas: DOMElement)
  drawElements(elements: WorldObject[])
}

class Browser {
  canvas: DOMElement;
  keyboard: Key;
  dispatch(actions)
  attachEvents() {
    canvas.addEventListener(..., keyboard.keyPress(e))
  }
}

class Game {
  browser: Browser;
  world: World;
  player: Player;

  constructor() {
    browser = new Browser();
    player = new Player(0,0)
    new World(player, new Painter(browser.canvas), this.checkKeys)
  }

  checkKeys {
    //keyboard checks;
  }

  start();
}

class World {
  painter: Painter;
  player: Player;
  enemies: Enemy[];

  constructor(player, painter) {
    player.obj = Phisic(100, 100, 10, 10, '')
  }

  tick() {
    const objects = [...]
    collisions()
    updateObjects(objects)
    draw(objects)
  }

  collisions() {
    checkCollided(this.enemy, players, afterCollidePlayerAndEnemy)
  }

  draw(objects) {
    painter.draw(objects)
  }
}

--- base.ts ---
updateObjects(objects) {
  objects.forEach(obj.splice(unusedIndex))
  objects.forEach(obj.pos.x++)
}


--- collides.ts ---
afterCollidePlayerAndEnemy = (player, enemy)

-- base.ts --

class WorldObject {
  constructor() {
    world.push()
  }
}
